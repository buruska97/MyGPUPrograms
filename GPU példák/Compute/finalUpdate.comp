#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(std430, binding = 0) buffer positionBuffer
{
	vec4 position[];
};

layout(std430, binding = 1) buffer positionBufferTmp
{
	vec4 tmpPosition[];
};

layout(std430, binding = 2) buffer velocityBuffer
{
	vec4 velocity[];
};

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

uniform float dt;

void main()
{
	uint gid = gl_GlobalInvocationID.y * gl_WorkGroupSize.x * gl_NumWorkGroups.x + gl_GlobalInvocationID.x;

	vec3 pos = position[gid].xyz;
	vec3 nextPos = tmpPosition[gid].xyz;

	velocity[gid].xyz = (nextPos - pos) / dt;
	position[gid].xyz = nextPos;
}